Q2. #include <stdio.h>

struct complex {
 float re; 
 float im; 
};

struct complex add(struct complex z1, struct complex z2)
{
    struct complex sum;
    sum.re=z1.re+z2.re;
    sum.im=z1.im+z2.im;
    return sum;
}

struct complex sub(struct complex z1, struct complex z2)
{
    struct complex diff;
    diff.re=z1.re-z2.re;
    diff.im=z1.im-z2.im;
    return diff;
}

struct complex mult(struct complex z1, struct complex z2)
{
    struct complex prod;
    prod.re=z1.re*z2.re-z1.im*z2.im;
    prod.im=z1.im*z2.re+z1.re*z2.im;
    return prod;
}

struct complex divi(struct complex z1, struct complex z2)
{
    struct complex quot;
    quot.re=(z1.re*z2.re+z1.im*z2.im)/(z2.re*z2.re+z2.im*z2.im);
    quot.im=(z2.re*z1.im-z1.re*z2.im)/(z2.re*z2.re+z2.im*z2.im);
    return quot;
}

int main()
{
    struct complex complex1, complex2, result1, result2, result3, result4;
    printf( "Enter the first complex number:");
    printf( "\nEnter the real part: ");
    scanf( "%f", &complex1.re);
    printf( "Enter the imaginary part: ");
    scanf( "%f", &complex1.im);
    printf( "\nEnter the second complex number:");
    printf( "\nEnter the real part: ");
    scanf( "%f", &complex2.re);
    printf( "Enter the imaginary part: ");
    scanf( "%f", &complex2.im);

    result1=add(complex1,complex2);
    printf("\nSum: %.2f + %.2fi",result1.re,result1.im);
    result2=sub(complex1,complex2);
    printf("\nDifference: %.2f + %.2fi",result2.re,result2.im);
    result3=mult(complex1,complex2);
    printf("\nProduct: %.2f + %.2fi",result3.re,result3.im);
    result4=divi(complex1,complex2);
    printf("\nQuotient: %.2f + %.2fi",result4.re,result4.im);

return 0;
}

Q3. #include <stdio.h>

struct employee
{
    char first[20];
    char last[20];
    int age;
    char gender;
    double salary;
} employees[20];

float average(struct employee employees[20])
{
 int i;
 float sum=0;
 for(i=0;i<20;i++)
  sum=sum+(float)employees[i].salary;
  float avg=sum/20;
 return avg;
}

struct employee minimum(struct employee employees[20])
{
    int i;
    int m=employees[0].age;
    int min=0;
    for (i=0;i<20;i++) 
    {
        if(employees[i].age<m)
        {
            m=employees[i].age;
            min=i;
        }
    }
    return employees[min];
}

void sort(struct employee employees[20])
{
    int i,j,temp;
    for(i=0;i<20;i++) 
        {
 
            for(j=i+1;j<20;j++)
            {
 
                if(employees[i].age>employees[j].age) 
                {
 
                    temp=employees[i].age;
                    employees[i].age=employees[j].age;
                    employees[j].age=temp;
 
                }
 
            }
 
        }
}

void print(struct employee employees[20])
{
    for(int i=0;i<20;i++)
    {
        printf("First name: %s\n", employees[i].first);
        printf("Last name: %s\n", employees[i].last);
        printf("Age: %d\n", employees[i].age);
        printf("Gender: %c\n", employees[i].gender);
        printf("Salary: %lf\n", employees[i].salary);
        printf("\n");
    }
}
int main()
{
    struct employee employees[20];
    for(int i=0;i<20;i++)
    {
        printf("Enter details for employee %d:\n", i+1);
        printf("\n");
        printf("First name: ");
        scanf("%s", &employees[i].first);
        printf("Last name: ");
        scanf("%s", &employees[i].last);
        printf("Age: ");
        scanf("%d", &employees[i].age);
        printf("Gender: ");
        scanf(" %c",&employees[i].gender);
        printf("Salary: ");
        scanf("%lf",&employees[i].salary);
        printf("\n");
    }
        print(employees);
        printf("\n");
        printf("Average salary: %f\n", average(employees));
        printf("Youngest age: %d\n", minimum(employees));
    
    return 0;
}